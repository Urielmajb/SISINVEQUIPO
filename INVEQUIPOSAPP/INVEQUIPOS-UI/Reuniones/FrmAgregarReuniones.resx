<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="formAssistant1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="Error.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>150, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="FrmAgregarReuniones.IconOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>